- name: Download Long Term Jenkins release
  get_url:
    url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
    dest: /etc/yum.repos.d/jenkins.repo

- name: Import jenkins key from url
  ansible.builtin.rpm_key:
    state: present
    key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

- name: Docker repository
  get_url:
    url: https://download.docker.com/linux/fedora/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: yum update
  yum:
    name: '*'
    state: latest

- name: Enable caddy repo
  community.general.copr:
    state: enabled
    name: '@caddy/caddy'

- name: Install java, caddy, docker, jenkins and other packages
  yum:
    name:
      - git
      - java
      - java-devel
      - caddy
      - jenkins
      - curl
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: true
  register: apt_status
  until: apt_status is success
  delay: 6
  retries: 10


- name: start docker
  ansible.builtin.systemd:
    daemon_reload: yes
    name: docker
    state: started

- name: copy jenkins config
  copy:
    src: files/jenkins.service
    dest: /lib/systemd/system/jenkins.service
  register: jenkinsfile

- name: Template CasC
  ansible.builtin.template:
    src: files/jenkins.yaml.jinja
    dest: /var/lib/jenkins/jenkins.yaml
  register: casc

- name: copy jobs
  copy:
    src: files/job-dsl.groovy
    dest: /var/lib/jenkins/job_dsl.groovy
  register: jobs

- name: create jenkins plugins dir
  file:
    path: /var/lib/jenkins/plugins
    state: directory
    owner: jenkins
    group: jenkins

- name: download casc plugin before setup
  get_url:
    url: "https://updates.jenkins-ci.org/latest/{{ item }}.hpi"
    dest: /var/lib/jenkins/plugins/{{ item }}.jpi
  loop:
    - configuration-as-code
  register: plugins

- name: Start jenkins
  ansible.builtin.systemd:
    daemon_reload: yes
    name: jenkins
    state: restarted
  when: jenkinsfile.changed or jobs.changed or casc.changed or plugins.changed

- name: Template Caddyfile
  ansible.builtin.template:
    src: files/Caddyfile.jinja
    dest: /etc/caddy/Caddyfile
  register: caddyfile

- name: Start caddy
  ansible.builtin.systemd:
    name: caddy
    state: restarted
  when: caddyfile.changed

- name: Wait for Jenkins to be reachable
  uri:
    url: https://jenkins.{{ domain_name }}/login
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200

- name: Install  plugins and their missing dependecies
  community.general.jenkins_plugin:
    name: "{{ item }}"
    state: present
    url_username: "{{ jenkins_admin_user }}"
    url_password: "{{ jenkins_admin_passwd }}"
    url: https://jenkins.{{ domain_name }}
  loop:
    - configuration-as-code
    - credentials
    - github
    - job-dsl
    - role-strategy
    - script-security
    - ws-cleanup
  register: plugins_newpasswd

- name: restart jenkins
  ansible.builtin.systemd:
    name: jenkins
    state: restarted
  when: plugins_newpasswd.changed

- name: Wait for Jenkins to be reachable
  uri:
    url: https://jenkins.{{ domain_name }}/login
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200

- name: enable plugins (with new password)
  community.general.jenkins_plugin:
    name: "{{ item }}"
    state: enabled
    url_username: "{{ jenkins_admin_user }}"
    url_password: "{{ jenkins_admin_passwd }}"
    url: https://jenkins.{{ domain_name }}
  loop:
    - configuration-as-code
    - credentials
    - github
    - job-dsl
    - role-strategy
    - script-security
    - ws-cleanup

- name: add jenkins to docker group
  user:
    name: jenkins
    groups: docker
    append: true
  register: user_group

- name: Log into private registry
  community.docker.docker_login:
    registry_url: registry.{{ domain_name }}
    username: "{{ registry_user }}"
    password: "{{ registry_passwd }}"
  become_user: jenkins

- name: make sure /var/lib/jenkins/whanos_images exists
  ansible.builtin.file:
    path: /var/lib/jenkins/whanos_images
    state: directory
    mode: '0755'

- name: Copy whanos image build files
  ansible.builtin.copy:
    src: "files/whanos_images/{{ item }}"
    dest: /var/lib/jenkins/whanos_images
  loop:
    - befunge
    - c
    - java
    - javascript
    - python

- name: Copy detect_project.py to /bin/detect_project
  ansible.builtin.copy:
    src: "files/detect_project.py"
    dest: /bin/detect_project
    mode: '0711'
    owner: jenkins
    group: jenkins

- name: template build_and_deploy.sh.jinja to /bin/build_and_deploy
  ansible.builtin.template:
    src: "files/build_and_deploy.sh.jinja"
    dest: /bin/build_and_deploy
    mode: '0711'
    owner: jenkins
    group: jenkins