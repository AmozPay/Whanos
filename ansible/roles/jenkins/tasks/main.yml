- name: Wait for any possibly running unattended upgrade to finish
  raw: systemd-run --property="After=apt-daily.service apt-daily-upgrade.service" --wait /bin/true


- name:  add jenkins repository key
  ansible.builtin.apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
    state: present

- name: add jenkins repository
  ansible.builtin.apt_repository:
    repo: deb http://pkg.jenkins.io/debian-stable binary/
    state: present

- name:  add caddy repository key
  ansible.builtin.apt_key:
    url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
    state: present

- name: add caddy sources 1/2
  ansible.builtin.apt_repository:
    repo: deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main
    state: present
- name: add caddy sources 2/2
  ansible.builtin.apt_repository:
    repo: deb-src https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main
    state: present

- name: install caddy
  apt:
    pkg: caddy

- name: Template Caddyfile
  ansible.builtin.template:
    src: files/Caddyfile.jinja
    dest: /etc/caddy/Caddyfile
  register: caddyfile

- name: Install java
  apt:
    pkg:
      - openjdk-17-jdk
      - openjdk-17-jre

- name: install jenkins
  apt:
    pkg: jenkins

- name: copy jenkins config
  copy:
    src: files/jenkins.service
    dest: /lib/systemd/system/jenkins.service
  register: jenkinsfile

- name: Template CasC
  ansible.builtin.template:
    src: files/jenkins.casc.yml.jinja
    dest: /var/lib/jenkins/casc.yml
  register: casc

- name: copy jobs
  copy:
    src: files/job-dsl.groovy
    dest: /var/lib/jenkins/job_dsl.groovy

- name: Start jenkins
  ansible.builtin.systemd:
    daemon_reload: yes
    name: jenkins
    state: restarted
  when: jenkinsfile.changed

- name: Start caddy
  ansible.builtin.systemd:
    name: caddy
    state: restarted
  when: caddyfile.changed

- name: get jenkins initial password
  command: "cat /var/lib/jenkins/secrets/initialAdminPassword"
  register: initialPassword

- name: Wait for Jenkins to be reachable
  uri:
    url: https://jenkins.{{ domain_name }}/login
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200

- name: Install  plugins
  community.general.jenkins_plugin:
    name: "{{ item }}"
    state: latest
    url_username: admin
    url_password: "{{ initialPassword.stdout }}"
    url: https://jenkins.{{ domain_name }}
  loop:
    - configuration-as-code
    - credentials
    - github
    - job-dsl
    - role-strategy
    # - script-security
    - ws-cleanup
  register: plugins


# - name: Setup configuration as code in jenkins service
#   ansible.builtin.lineinfile:
#     path: /lib/systemd/system/jenkins.service
#     line: Environment="CASC_JENKINS_CONFIG=/var/lib/jenkins/casc.yml"

- name: restart jenkins
  ansible.builtin.systemd:
    name: jenkins
    state: restarted
  when: plugins.changed

- name: enable plugins
  community.general.jenkins_plugin:
    name: "{{ item }}"
    state: enabled
    url_username: admin
    url_password: "{{ initialPassword.stdout }}"
    url: https://jenkins.{{ domain_name }}
  loop:
    - configuration-as-code
    - credentials
    - github
    - job-dsl
    - role-strategy
    # - script-security
    - ws-cleanup


# required for jenkins jobs: install docker

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker packages
  apt:
    name:
      - docker-ce
      - docker-compose
    state: latest
    update_cache: true

# security: run docker in kata containers

- name: Install kata containers
  community.general.snap:
    name:
      - kata-containers
    classic: true

- name: make sure /etc/docker exists
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: '0755'

# - name: setup docker to use kata-runtime
#   copy:
#     src: files/daemon.json
#     dest: /etc/docker/daemon.json
#   register: docker_daemon

- name: restart docker
  ansible.builtin.systemd:
    daemon_reload: yes
    name: docker
    state: restarted
  when: docker_daemon.changed


